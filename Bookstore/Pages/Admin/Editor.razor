@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"
@inherits OwningComponentBase<IBooksRepository>

<style>
    div.validation-message {color: rgb(220,53,69); font-weight:500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Book</h3>

<EditForm Model="p" OnValidSubmit="SaveBook">

    <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class="form-group">
            <label>Book Id</label>
            <input class="form-control" disabled value="@p.BookId" />
        </div>

        <div class="form-group">
            <label> Name: </label>
            <ValidationMessage For="@(() => p.Title)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="p.Title"></InputText>
        </div>

        <div class="form-group">
            <label> Author: </label>
            <ValidationMessage For="@(() => p.Author)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="p.Author"></InputText>
        </div>

        <div class="form-group">
            <label> Publisher: </label>
            <ValidationMessage For="@(() => p.Publisher)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="p.Publisher"></InputText>
        </div>

        <div class="form-group">
            <label> Isbn: </label>
            <ValidationMessage For="@(() => p.Isbn)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="p.Isbn"></InputText>
        </div>

        <div class="form-group">
            <label> Classification: </label>
            <ValidationMessage For="@(() => p.Classification)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="p.Classification"></InputText>
        </div>

        <div class="form-group">
            <label> Category: </label>
            <ValidationMessage For="@(() => p.Category)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="p.Category"></InputText>
        </div>

        <div class="form-group">
            <label> Price: </label>
            <ValidationMessage For="@(() => p.Price)"></ValidationMessage>
            <InputNumber class="form-control" @bind-Value="p.Price"></InputNumber>
        </div>

        <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>
    
</EditForm>

@code {

    [Parameter]
    public long Id { get; set; } = 0;

    public string ThemeColor => Id == 0 ? "primary" : "warning";

    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Book p { get; set; } = new Book();

    public IBooksRepository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0) //Existing Project
        {
            p = repo.Books.FirstOrDefault(x => x.BookId == Id);
        }
    }

    public void SaveBook()
    {
        if (Id == 0) //new project
        {
            repo.CreateBook(p);
        }
        else
        {
            repo.SaveBook(p);
        }

        NavManager.NavigateTo("/admin/books", true);
    }

    [Inject]
    public NavigationManager NavManager { get; set; }
}
